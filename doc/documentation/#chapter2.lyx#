#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\options bibliography=totoc,listof=totoc,BCOR=5mm,DIV=12
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-1
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks false
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine biblatex
\cite_engine_type authoryear
\biblio_style plainnat
\biblio_options backend=biber
\biblatex_bibstyle alphabetic
\biblatex_citestyle alphabetic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
chapter{OCR}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "chap_technical_requirements"

\end_inset


\end_layout

\begin_layout Standard
Dieser Chapter fügt sich in den Bereich der Document Image Analysis (DIA).
\end_layout

\begin_layout Section
Forschungsstand
\end_layout

\begin_layout Standard
\noindent
DIA bezeichnet allgemein eine große Gruppe von Techniken, die visuelle Informati
onen charakterisieren können.
 Dia gehört zu den ältesten Bereichen der Informatik.
 1913 Erfand Edmund Fournier das Optophon, mit dem dunkle Schriftzeichen
 auf einem Stück Papier erkannt werden können und als Töne interpretiert
 wurden.
\end_layout

\begin_layout Standard
\noindent
Heutzutage durchlaufen moderne DIA-Algorithmen Rasterbilder, die mit Scannern,
 Kameras oder anderen Digitalisierungsgeräten erzeugt wurden.
\end_layout

\begin_layout Section
Probleme
\end_layout

\begin_layout Standard
Durch die stetige Weiterentwicklung von DIA ist die Vielfalt der Probleme
 gewachsen 
\begin_inset CommandInset citation
LatexCommand cite
key "DIA_CAT"
literal "false"

\end_inset

:
\end_layout

\begin_layout Itemize
Binarisierung - Klassifizieren welche Pixel im Vordergrund un welche im
 Hintergrund ist
\end_layout

\begin_layout Itemize
Korrektur - Korrigieren der perspektivischen Verzerrung.
 Dies passiert wenn die Kamera nicht orthogonal zum Physikalischen Dokument
 positioniert ist
\end_layout

\begin_layout Itemize
Seitensegmentierung - Unterteilen einer Seite in homogene Komponenten wie
 Text, Bilder und Grafiken
\end_layout

\begin_layout Itemize
Textsegmentierung - Unterteilen eines Textabschnitts in Zeilen
\end_layout

\begin_layout Itemize
Dokumentklassifizierung - Klassifizierung des Dokumenttyps
\end_layout

\begin_layout Itemize
Schrift und - Spracherkennung - Klassifizieren mit welcher Schrift geschrieben
 wurde und welche Sprache benutzt wird
\end_layout

\begin_layout Itemize
Zeichensegmentierung - Segmentiert ein Wortbild in individuelle Charaktere
\end_layout

\begin_layout Itemize
Grafische Erkennung - Erkennung von graphischen Komponenten
\end_layout

\begin_layout Itemize
Tabellenlayout-Struktur Erkennung - Wiederherstellen der Zeilen und- Spaltenstru
ktur von einem Bild einer Tabelle
\end_layout

\begin_layout Itemize
Öffentlich genutzte Text und Grafiken erkennen - In der Öffentlichkeit genutzen
 Text und Grapfiken klassifizieren, wie beispielsweise Nummerschilder und
 Straßenzeichen
\end_layout

\begin_layout Itemize
Identifikation des Verfassers - Das bestimmen von indivuellen Charakteristiken
 des Verfassers des Textes, wie beispielsweise Geschlecht oder Alter
\end_layout

\begin_layout Itemize
Messung der Dokumentenqualität
\end_layout

\begin_layout Itemize
Handgeschriebenen Text erkennen - Texterkennung bei handgeschrieben Text
 von individuellen Verfassern
\end_layout

\begin_layout Section
Vorgehensweise in DIA
\end_layout

\begin_layout Standard
Die typische Bildverarbeitungspipeline für Dokumente besteht aus drei allgemeine
n Schritten.
\end_layout

\begin_layout Enumerate
Vorverarbeitung - Das preprocessing der Dokumente beinhaltet das Entfernen
 von Rauschen und Unschärfe, Korrektur, Entzerrung und Binarisierung.
\end_layout

\begin_layout Enumerate
Layout-Analyse - Verstehen der Dokumentstruktur um Regionen die im Interesse
 (Regions of Interest) liegen zu identifizieren.
\end_layout

\begin_layout Enumerate
Erkennung - Extrahieren von den Informationen aus jeder Rol.
\end_layout

\begin_layout Section
Optical Charakter Recognition (OCR)
\end_layout

\begin_layout Standard
\noindent
Eine Technik von DIA ist die optische Zeichenerkennung (OCR), die auf das
 Erkennen gedruckter Zeichen ausgelegt ist.
 Die Technologie findet derzeit bei der automatisierten Weiterleitung von
 E-Mails statt, indem Postleitzahlen von Briefumschlägen geparst werden.
\end_layout

\begin_layout Standard
\noindent
Generell kann OCR als möglicherweise gelöstest Problem für maschinell gedruckte
 und gescannte Bürodokumente in Englischer Schrift betrachtet werden.
 Es werden Genauigkeiten von mehr als 99% erzielt.
 Jedoch gibt es über 3000 geschriebene Sprachen und bei der optischen Zeichenerk
ennung ist bei der Mehrheit der Sprachen ein ungelöstes Problem, welches
 sich in laufender Forschung befindet.
\end_layout

\begin_layout Section
Funktionsweise von OCR
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:doc_rec_use_case"
plural "false"
caps "false"
noprefix "false"

\end_inset

 ist die seqentuelle Workflow von einem Texterkennungsprozesses abgebildet.
 Das Bild wird als Dokument hochgeladen und mit preprocessing wird das Bild
 fur den Klassierungsprozess aufbereitet.
 Abhangig von den bestimmten Schwellwert wird das Bild binarisiert.
 Texte werden als weie Pixel dargestellt, wahrend alle darumliegende Pixel
 zu schwarz konvertiert werden.
 Somit hebt sich der Text komplett vom Hintergrund ab.
 Nun konnen Zeilenweise die Worter segmentiert werden, um diese wiederum
 in Charakter zu segmentieren.
 Die Charaktere werden als einzelnde als Merkmale extrahiert und klassiziert.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/flowchart_ocr.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Chapter 2 - Wasserfalldiagramm OCR 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "flowchart_ocr"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Tesseract
\end_layout

\begin_layout Standard
Die Tesseract-Engine ist eine Texterkennungssoftware und wurde im Jahre
 2007 in der Ninth International Conference on Document Analysis and Recognition
 (ICDAR 2007) von Ray Smith veröffentlicht
\begin_inset CommandInset citation
LatexCommand cite
key "R07"
literal "false"

\end_inset

.
 Sie ist zwischen 1984 und 1994 von dem Unternehmen 
\emph on
Hewlett-Packard
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
https://www8.hp.com
\end_layout

\end_inset

 entwickelt wurden.
 HP hatte den Fokus auf OCR und erzielten mit Tesseract sehr gute Zielgenauigkei
ten bezüglich von textbasierten Erkennungmustern, obwohl sie Tesseract nicht
 als Produkt vermaktet haben.
 1995 erzielte Tesseract mit seinem Ergebnissen den dritten Platz auf der
 UNLV - Einem jährlichen Test zur Messung von Genauigkeiten im Bereich von
 OCR
\begin_inset CommandInset citation
LatexCommand cite
key "RJN95"
literal "false"

\end_inset

 und seitdem nicht mehr weiterentwickelt wurden.
 Ray Smith, der bei HP an Tesseract mitentwickelte, arbeitete mittlerweile
 bei Google und brachte 2005 Tesseract, wessen Quelltext im selbigen Jahr
 öffentlich gemacht wurden ist, auf den neusten Stand der Technik.
\end_layout

\begin_layout Standard
Page segmentation modi:
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
matching
\end_layout

\begin_layout Standard
leventhstein, fuzzy, https://github.com/kavgan/nlp-in-practice/blob/master/tf-idf
/Keyword%20Extraction%20with%20TF-IDF%20and%20SKlearn.ipynb
\end_layout

\begin_layout Section
Natural Language Processing
\end_layout

\begin_layout Standard
Die Motivation der Technologie Natural Language Processing (NLP) ist eine
 direkte Kommunkation zwischen Mensch und Maschine auf Basis der natürlichen
 Sprache herzustellen.
 NLP deckt ein weites Spektrum von Techniken ab Software zu entwickeln,
 die dazu dient die menschliche Sprache zu verstehen.
 Die Wahl der Technik ist auf den Anwendungsfall abgezielt, so werden in
 einigen Fällen beispielsweise Wortfrequenzen gezählt, um verschiedene Schreibst
ile zu vergleichen wobei in einem anderem Kontext muss der vermeintliche
 Inhalt einer menschlichen Äußerung verstanden werden
\begin_inset CommandInset citation
LatexCommand cite
key "BKL09"
literal "false"

\end_inset

.
 Die Technologie wird sowohl im Bereich der Texterkennung als auch in der
 Spracherkennung verwendet.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Paraphrase Identification
\end_layout

\begin_layout Standard
Cosine similarity
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
endinput
\end_layout

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "./bib/thesis"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
