#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\options bibliography=totoc,listof=totoc,BCOR=5mm,DIV=12
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-1
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks false
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine biblatex
\cite_engine_type authoryear
\biblio_style plainnat
\biblio_options backend=biber
\biblatex_bibstyle alphabetic
\biblatex_citestyle alphabetic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
chapter{Grundlagen}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "chap_basics"

\end_inset


\end_layout

\begin_layout Standard
In Diesem Kapitel werden die benötigten Grundlagen soweit erklärt, dass
 Basiskenntisse zum Verstehen dieser Arbeit gegeben sind.
\end_layout

\begin_layout Section
Systembeschreibung
\end_layout

\begin_layout Standard
Grundlegend stellt das System eine Schnittstelle zwischen Versicherungsunternehm
en und Logististikunternehmen dar.
 Es existiert als Webanwendung unter einer Domäne und setzt eine Registration
 des Benutzers vorraus, um es zu gebrauchen.
 Benutzer verfügen im Kontext der Webanwendung über bestimmte administrative
 Rechte, die mittels einer Rollenvergabe organisiert werden.
 Auch die Unterscheidung zwischen Versicherer oder Spediteur findet über
 die Rollenidentifikation statt.
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
Bei Erfassen eines Schadens seitens des Spediteurs wird für ihm eine Schadensakt
e angelegt.
 Eine Funktion in der Schadensakte beinhaltet das Hochladen von Nachweisen
 für die Schadensdokumentation, darunter Rechnungsbelege, die es zu erkennen
 gilt.
 Anhand erkannter Rechnungsbelege ist eine Extraktion der Rechnungsinformationen
 durchzuführen.
\end_layout

\begin_layout Section
Machine Learning
\end_layout

\begin_layout Standard
Machine Learning beruht auf den Gebiet der Mustererkennung, die sich mit
 der automatischen Erkennung von Regelmäßigkeiten in Daten unter Verwendung
 von Algorithmen befasst.
 Durch das Erkennen von Regelmäßigkeiten werden Maßnahmen zur Klassifierung
 der Daten in verschiedene Kategorien ergriffen.
 
\begin_inset CommandInset citation
LatexCommand cite
key "B06"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Machine Learning ist die Wissenschaft Computer so zu programmieren, sodass
 sie in der Lage sind von Daten zu lernen und ist bereits eine weiterforschte
 Technologie, die Verwendung in hochtechnologischen Produkten findet.
 Sie ist veranwortlich für die Realiserung von unter anderem die Spracherkennung
 in Smartphones, das Empfehlen von Videos auf Videoportale und das Ranking
 von Suchergebnissen im Internet-Suchmaschinen.
 
\begin_inset CommandInset citation
LatexCommand cite
key "G17"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
Eine der ersten populärsten Anwendungsfälle von Machine Learning ist der
  Filter um Spam-Mails zu erkennen.
  Der Spamfilter ist dazu in der Lage seriösen Mails von Spam-Mails zu untersche
i den und als solche zu kennzeichnen.
  Eine dementsprechende Intelligenz setzt voraus, dass der Software beigebracht
  werden muss wie es eine Spam-Mail als solche erkennt.
 
\begin_inset VSpace bigskip
\end_inset

Spam-Mails weisen Regelmäßigkeiten auf, die sie von seriösen Mails unterscheiden.
  Ein sehr prägnantes Merkmale einer Spammail ist der Inhalt der Nachricht.
  Wörter wie 
\emph on
kostenlos, schnelles Geld, reich werden, risikofrei
\emph default
 und 
\emph on
hier klicken 
\emph default
sind eine typische Charakteristik einer Spam-Mail
\emph on

\begin_inset CommandInset citation
LatexCommand cite
key "S03"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Damit ein intelligenter Filter in der Lage ist Spam-Mails zu erkennen, muss
  er die korrespondierenden Regelmäßigkeiten kennen.
  Das notwendige Wissen eignet sich die Software über ein Verfahren im Maschinel
l en Lernen an: Es wird eine Vielzahl von Daten benötigt, die zum Trainieren
  der Software dient, damit sie Charakteristiken von Spam-Mails erkennen
  kann.
  Dieser Datensatz nennt sich Trainingssatz und wird zum Einstellen von
 Parametern eines adaptiven Modells benötigt.
  Im Fall des Spamfilters gibt es zwei Zielmerkmale:
\end_layout

\begin_layout Itemize
True: Es handelt sich um eine Spam-Mail
\end_layout

\begin_layout Itemize
False: Es handelt sich um keine Spam-Mai
\end_layout

\begin_layout Standard
Das Modell adaptiert Erkennungsmuster anhand von den Trainingssatz und kann
  bei neuen Daten anhand der Charakteristiken das Zielmerkmal prognostizieren.
  Um Trainingsdaten zu generieren wurden Spam-Mails von Benutzern gekennzeichnet
,  gesammelt und als Trainingsdaten verwendet.
\end_layout

\begin_layout Section
Neuronale Netze
\end_layout

\begin_layout Standard
Die Erforschung neuronaler Netze began im Jahr 1940 und wurde durch die
 Funktionsweise des menschlichen Gehirn motiviert
\begin_inset CommandInset citation
LatexCommand cite
key "NKK96"
literal "false"

\end_inset

.
 Biologisch gesehen besteht das Gehirn aus Neuronen die untereinander verbunden
 sind und durch elektrische Signale kommunizieren.
 Gesendete Signale werden durch die Synapse, der Kopplungsstelle des Neurons
 empfangen und über dessen Axon an Dendriten (Leitungen) weitergereicht.
 Die Dendriten haben die Aufgabe die Signale an die Synapsen, die sich in
 Form einer Zelle am Neuron befindet, weiterzuleiten.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Das Gehirn eines Menschen besteht aus einem Netzwerk mit einer großen Summe
 an Neuronen, die wie ein binäres Schaltelement zwei Zustände annehmen kann
 - aktiv (1) oder inaktiv (0).
 Ein Neuron arbeitet wie ein Prozessor - es nimmt Eingaben und generiert
 eine Ausgabe
\begin_inset CommandInset citation
LatexCommand cite
key "K94"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Der Aktivitätszustand dieser Neuronen hängt von den Impulsen ausgehend vorherlie
genden Neuronen ab, da diese einen direkten Einfluss auf die Synapsen haben.
 Es zwei Arten von Synapsen unterschieden werden - erregend und hemmend.
 Unter anbetracht von den Signalen, die das Neuron von den Synapsen erhält,
 wird dieses aktiv, wenn ein gewisser Schwellwert erreicht wird.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Die hemmenden oder verstärkenden Wirkung der Synapsen, die sich im Laufe
 der Zeit ändern kann, charakterisieren mitunter das Lernverhalten.
 Das Verhalten der Synapsen wird im Bereich der Informatik durch Multiplikation
 mit positiven oder negativen Zahlen übernommen.
 Sie sind die Grundbausteine eines neuronalen Netzes.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
in den frühen 1990 waren Neuronale Netze im Verruf, da sie im Gegensatz
 zu anderen Klassifikationsstrategien wie 
\emph on
Support Vector Machines
\emph default
 und Bayische Netzwerke schlechter abschnitten
\begin_inset CommandInset citation
LatexCommand cite
key "SSP03"
literal "false"

\end_inset

.
 In den Jahren ...
 gewannen Neuronale Netze an Popularität, da ....
\end_layout

\begin_layout Standard
Sie arbeiten mit Vektoren ohne Kenntnisse über die Eingabetopologie
\end_layout

\begin_layout Standard
Neuron -> Etwas, was eine Nummer hält.
 Eine Nummer zwischen 0 und 1.
 Die Nummer wird als Aktivierung bezeichnet.
\end_layout

\begin_layout Standard
Neuron -> Funktion, die alle Gewichte von den den Neuronen der vorherigen
 schicht als Input nimmt und eine Nummer zwischen 0 und 1 zurückgibt.
\end_layout

\begin_layout Standard
Gesamte Netz als funktion mit (x0..., x738) Pixel als input und Vek[y0....y9] als
 output
\end_layout

\begin_layout Standard
Neuronale Netze bestehen aus Neuronen die schichtenweise in 
\emph on
Layern 
\emph default
angeordnet sind.
 Jedes Neuron einer Schicht ist immer mit allen Neuronen der darauffolgenden
 Schicht vernetzt.
\end_layout

\begin_layout Standard
Gewicht ->
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "NC_JAH"
literal "false"

\end_inset


\end_layout

\begin_layout Subsection
Bilderkennung
\end_layout

\begin_layout Standard
Neuronale Netze sind eine leistungsstarke Technologie zur Klassifizierung
 visueller Eingaben von Dokumenten.
\end_layout

\begin_layout Subsection
Faltende neuronale Netze in der Bilderkennung
\end_layout

\begin_layout Subsection
OCR
\end_layout

\begin_layout Section
Datensatz
\end_layout

\begin_layout Standard
Daten existieren als Pixelmatritzen in Form von Bildern.
 Beim Füttern des Neuronales Netzes wird die Matrix in einen Vektor umgewandelnd
, also von einem 2d-array zu einem 1d-array.
 Jedes Pixel wird jeweils ein Neuron in der Eingabeschicht zugewiesen.
 bei einem 28x28 Bild müssten dafür 784 Neuronen in der Eingabeschicht exisitier
en.
\end_layout

\begin_layout Standard
Ein Neuron repräsentiert den Graustufenwert vom Entsprechenden Pixel eines
 Bildes.
 0 = dunkel, 1 = hell.
\end_layout

\begin_layout Standard
Es existieren soviele Neuronen in der Ausgabeschicht, wie es zuweisbare
 Klassen gibt.
 Die Aktivierung in den Neuronen in der Ausgabeschicht sagt aus, wie hoch
 das Eingabebild mit der korrespondierenden Klasse übereintrifft.
\end_layout

\begin_layout Standard
Spärliche Daten: Die Daten enthalten viele Nullen in den Daten.
\end_layout

\begin_layout Section
Serviceorientierte Architekturen
\end_layout

\begin_layout Standard
Serviceorientierte Architekturen oder abgekürzt SOA bezeichnet eine moderne
 Architektur, dessen Kerngedanke darin besteht komplexe Strukturen in Softwares
 aufzulösen.
 SOA ermöglicht eine Modernisierung der IT-Struktur des Unternehmens, da
 Funktionalitäten in geschäftsorientierte Serviceblöcke gekapselt werden
\begin_inset CommandInset citation
LatexCommand cite
key "FZ09"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Das Kernkonzept besteht aus dem Anbieten, Suchen und Nutzen von Diensten
 über ein Netzwerk.
 Diese Dienste werden plattformübergreifend von Applikationen genutzt und
 sind unabhängig von der jeweiligen Software
\begin_inset CommandInset citation
LatexCommand cite
key "M10"
literal "false"

\end_inset

.
 Die Serviceorientierte Architektur bietet daher universell anwendene Dienste,
 die bei Bedarf von jeder Applikation angesprochen werden kann.
 Die Geschäftslogik der Dienste können zweckbedingt mit der Programmiersprache
 geschrieben werden, die eine optimale Lösung bietet.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Eine Anfrage auf die Kommunikationsschnittstelle des Dienstes wird von der
 Geschäftslogik verarbeitet und wieder als Antwort über die Schnittstelle
 zurückgegeben.
 Der Vorteil gegenüber dem Konzept ist eine Betrachungsweise auf den Dienst,
 der nicht nur auf Entwickler begrenzt ist.
 Die Simplizität die durch das Konzept der serviceorientierten Architektur
 ermöglicht wird erbringt eine Zusammenarbeit von Entwickeln und dem Management
 des Unternehmens hinsichtlich der Organisation von Diensten.
\end_layout

\begin_layout Subsection
Webservices
\end_layout

\begin_layout Standard
Werbservices stellen die modularen, gekapselten Komponenten der SOA dar.
 Jede Webservice-Komponente beinhaltet nur die für ihren Zweck bestimmte
 Geschäftslogik und eine kontextbasierte Schnittstelle, die es bei Bedarf
 anzusprechen gilt.
 Im Verbund mit anderen Webservice-Komponenten werden im Kontext einer Applikati
on Funktionalitäten bereit gestellt.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Das Abstrahierungskonzept von SOA sieht vor, dass Die Schnittstelle der
 Webdienste wird von außen hin betrachtet wird.
 Es sind daher nur spezifierte Dienstanbieter für Wartung, Betrieb und Infrastru
ktur des jeweiligen Dienst veranwortlich, weswegen eine Kapselung der Gesamtkomp
lexität unter den einzelnen Dienstanbietern möglich ist.
 Des Weiteren sind Dienstanbieter für die Authentisierung und Authentifizierung
 und der Aufrechtshaltung zuständig.
 Dienstnutzende müssen sich als solche identifizieren bevor sie aus den
 Webservice zugreifen können.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
In einer Schnittstellenbeschreibung werden Servicebeschreibungen veröffentlicht,
 die im des Servicekontext die Kommunikationsmöglichkeit der Schnittstelle
 beschreibt.
 Konkret müssen dem Service nötige Informationen geliefert werden um die
 Anfrage in der Geschäftslogik zu bearbeiten.
 Die Schnittstellenbeschreibung listet die möglichen Antwortmöglichkeiten
 für eine an die Service gerichtete Anfrage auf.
 Der Dienstnutzende hat somit den Vorteil zu wissen wie der Webservice sich
 verhält.
\end_layout

\begin_layout Subsection
REST
\end_layout

\begin_layout Standard
Der Begriff REST steht für 
\emph on
Representional State Transfer 
\emph default
und ist von Roy Fielding in seiner Dissertation 
\emph on
Architectural Styles and the Design of Network-based Software Architectures
 
\emph default
geprägt wurden
\begin_inset CommandInset citation
LatexCommand cite
key "F00"
literal "false"

\end_inset

.
 Die REST-Schnittstelle ist ein weitverbreiteteter Architekturansatz, der
 dazu verwendet wird um eine Infrastruktur zwischen Client und Server zu
 etablieren.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Die REST-Architektur ermöglicht, dass Ressourcen jeweils über 
\emph on
Webservices
\emph default
 mit 
\emph on
Anfragen
\emph default
 (requests) gefordert werden können.
 Jeder Webservice verügt über eine
\emph on
 Uniform Ressourcer Locator 
\emph default
(URL) und lässt sich damit eindeutig identifizieren.
 Der Server schickt daraufhin eine 
\emph on
Antwort
\emph default
 (response), die die geforderten Ressourcen enthält.
 Da eine REST-Schnittstelle zustandslos ist und der Server keine gespeicherten
 Daten zurückgreifen kann, müssen bei einer Anfrage alle nötigen Informationen
 vom Client geliefert werden.
 Die Clientseitige Anfragen basieren auf dem 
\emph on
HTTP/s-Protokoll 
\emph default
und verwenden die damit zusammenhängenden 
\emph on
Anfragemethoden 
\emph default
(request methods), die in der Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:HTTP/s-Anfragemethoden"
plural "false"
caps "false"
noprefix "false"

\end_inset

 aufgeführt sind.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Methode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grundsatz
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GET
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschaffung von Informationen über eine Ressource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
POST
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erstellen einer Resource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PUT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aktualisieren einer Resource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DELETE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Löschen einer Resource
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "tab:HTTP/s-Anfragemethoden"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
HTTP/s-Anfragemethoden
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Um beispielsweise eine 
\emph on
Resource 
\emph default
User zu erstellen muss eine Anfrage an einen Endpunkt gerichtet werden,
 der die Funktionalität für die 
\emph on
POST-Anfrage 
\emph default
zur Verfügung stellt.
 Der Endpunkt würde über die URL 
\emph on
.../users
\emph default
 erreichbar sein.
 Die REST-Schnittstelle würde die Anfrage entgegennehmen und an die zuständige
 Geschäftslogik weiterreichen.
 Die entsprechende Schnittstellenarchitektur wird im REST-Schnittstelle
 im Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap_development_server"
plural "false"
caps "false"
noprefix "false"

\end_inset

 erläutert.
\end_layout

\begin_layout Section
Client
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
endinput
\end_layout

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "bib/thesis"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
